% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multipool.R
\name{multipool}
\alias{multipool}
\title{Perform Multipool Genome Scan}
\usage{
multipool(
  pool1,
  pool2,
  N,
  mode = c("replicates", "contrast"),
  res = 100,
  cM = 3300,
  filter = TRUE,
  nperm = 0,
  alpha = NULL,
  plot = TRUE,
  col_chr = "chr",
  col_pos = "pos",
  col_a = "a",
  col_b = "b",
  assume_chr = "chrI",
  header = TRUE,
  seed = NULL,
  parallel = FALSE,
  txdb = NULL,
  orgdb = NULL,
  q_threshold = DEFAULT_Q_THRESHOLD,
  verbose = TRUE
)
}
\arguments{
\item{pool1}{A file path (character string) to the first pool's data, or a
data frame containing the required columns (\code{chr}, \code{pos}, \code{a}, \code{b}).}

\item{pool2}{A file path (character string) to the second pool's data, or a
data frame containing the required columns (\code{chr}, \code{pos}, \code{a}, \code{b}).}

\item{N}{Numeric. The effective number of individuals contributing to each
sequencing pool. This accounts for the variance introduced during pooling
and sequencing.}

\item{mode}{Character string. Specifies the analysis mode:
\describe{
\item{"replicates"}{Assumes the two pools are biological or technical
replicates selected under the \emph{same} condition. The LOD score tests
for deviations from the expected 0.5 allele frequency in \emph{both} pools
simultaneously.}
\item{"contrast"}{Assumes the two pools were selected under \emph{different}
conditions. The LOD score tests for significant \emph{differences} in
allele frequency between the two pools.}
}}

\item{res}{Numeric. The desired bin resolution in base pairs for analysis
(default: 100). Marker data within each bin is aggregated.}

\item{cM}{Numeric. An estimate of the average number of base pairs per
centiMorgan for the organism (default: 3300 for yeast). Used to calculate
the recombination rate between adjacent bins.}

\item{filter}{Logical. If TRUE (default), apply filtering to remove markers
with zero counts for either allele ('fixated' markers) and bins with
extremely high coverage (potential PCR duplicates/mapping artifacts).}

\item{nperm}{Integer. The number of permutations to perform for establishing
significance (p-values and q-values) (default: 0, no permutations). Setting
this to > 0 (e.g., 1000) is recommended for robust analysis.}

\item{alpha}{Deprecated. Significance level is now typically determined by choosing a
q-value threshold (e.g., q < 0.05) on the results.}

\item{plot}{Logical. If TRUE (default), generate a genome-wide plot of the
results using ggplot2.}

\item{txdb}{A TxDb object for gene annotations (default:
TxDb.Scerevisiae.UCSC.sacCer3.sgdGene). See GenomicFeatures package.}

\item{orgdb}{An OrgDb object for gene annotations (default: org.Sc.sgd.db).
See AnnotationDbi package.}

\item{q_threshold}{Numeric. The q-value threshold for calling significance
in annotation and highlighting genes on the plot when \code{nperm > 0}.
(Default: 0.05).}
}
\value{
A list containing:
\describe{
\item{results}{A data frame with genome-wide results, including columns
for chromosome (\code{chr}), bin start position (\code{pos}), observed allele
frequencies (\code{freq1_obs}, \code{freq2_obs}), smoothed posterior allele
frequencies (\code{freq1_fit}, \code{freq2_fit}), LOD scores (\code{LOD}), MLE
allele frequencies or differences (\code{mu_MLE_adj}), and if \code{nperm > 0},
empirical p-values (\code{p_value}) and q-values (\code{q_value}).}
\item{fdr_lod_threshold}{The LOD score threshold corresponding to the chosen \code{q_threshold},
if permutations were run and significant results found. Otherwise NULL.}
\item{plot}{A ggplot object containing the genome-wide plot. NULL if
\code{plot} was FALSE.}
\item{annotated_genes}{A data frame containing information about genes
overlapping bins. If \code{nperm > 0}, this includes genes overlapping bins
meeting the \code{q_threshold}. If \code{nperm = 0}, this includes
genes overlapping \emph{any} bin. NULL if annotation databases unavailable.}
\item{parameters}{A list storing the key parameters used for the analysis.}
}
}
\description{
This is the main function to run the multipool analysis. It loads data for
two pools, performs QTL mapping using a Kalman filter approach, optionally
runs permutation tests to estimate significance (p-values and q-values),
annotates significant QTL regions with yeast gene information, and generates
a genome-wide plot of the results.
}
\examples{
\dontrun{
# --- Example with dummy data ---

# Create dummy data frames
make_dummy_pool <- function(n_markers = 5000, chr = "chrI") {
  pos <- sort(sample(1:200000, n_markers, replace = TRUE))
  a <- rpois(n_markers, lambda = 20)
  b <- rpois(n_markers, lambda = 20)
  # Introduce a fake QTL
  qtl_region <- pos > 80000 & pos < 120000
  a[qtl_region] <- rpois(sum(qtl_region), lambda = 35)
  b[qtl_region] <- rpois(sum(qtl_region), lambda = 10)
  data.frame(chr = chr, pos = pos, a = a, b = b)
}

pool1_df <- make_dummy_pool(chr = "chrI")
pool2_df <- make_dummy_pool(chr = "chrI") # Replicate

# Combine into two chromosomes for a more realistic example
pool1_combined <- rbind(pool1_df, make_dummy_pool(chr="chrII", n_markers=3000))
pool2_combined <- rbind(pool2_df, make_dummy_pool(chr="chrII", n_markers=3000))

# Ensure required packages are loaded (needed for default annotation DBs)
# library(TxDb.Scerevisiae.UCSC.sacCer3.sgdGene)
# library(org.Sc.sgd.db)

# Run analysis in "replicates" mode with permutations for FDR
results_rep <- multipool(
  pool1 = pool1_combined,
  pool2 = pool2_combined,
  N = 50,
  mode = "replicates",
  res = 500,
  cM = 3300,
  nperm = 1000, # Use >= 1000 for reliable FDR
  q_threshold = 0.10 # Use a 10\% FDR threshold
)

# View results with p/q-values
print(head(results_rep$results))
# Print the LOD threshold corresponding to the FDR cutoff
print(paste("LOD threshold for q <", results_rep$parameters$q_threshold, ":",
            round(results_rep$fdr_lod_threshold, 3)))
# View plot (will highlight genes with q < 0.1 and show threshold line)
if (!is.null(results_rep$plot)) {
  print(results_rep$plot)
}
print(results_rep$annotated_genes) # Genes meeting q-threshold

# Run analysis without permutations (nperm = 0)
results_no_perm <- multipool(
  pool1 = pool1_combined,
  pool2 = pool2_combined,
  N = 50,
  mode = "replicates",
  res = 500,
  cM = 3300,
  nperm = 0
)

# View plot (should label genes near peaks)
if (!is.null(results_no_perm$plot)) {
  print(results_no_perm$plot)
}
print(results_no_perm$annotated_genes) # All overlapping genes

} # end dontrun
}
